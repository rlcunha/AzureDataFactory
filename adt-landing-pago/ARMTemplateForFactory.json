{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adt-landing-pago"
		},
		"ls_adls_gestao_bigdata_servicePrincipalCredential": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalCredential' of 'ls_adls_gestao_bigdata'"
		},
		"ls_azuresql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_azuresql'"
		},
		"ls_msql_local_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_msql_local'"
		},
		"ls_mysql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_mysql'"
		},
		"ls_sql_db_azure_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sql_db_azure'"
		},
		"lsSnowFlake_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lsSnowFlake'"
		},
		"ls_adls_gestao_bigdata_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sagestaoloja.dfs.core.windows.net"
		},
		"ls_adls_gestao_bigdata_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "41449c7c-1d3f-4e16-9755-3285e7635e3a"
		},
		"ls_adls_gestao_bigdata_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "b9139232-f272-4007-9ae6-307a424eb4a6"
		},
		"ls_akv_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://akv-mibitech.vault.azure.net/"
		},
		"tr_landing_properties_pl_ingerir_fechamento_parameters_p_banco_controle": {
			"type": "string",
			"defaultValue": "dbControle"
		},
		"tr_landing_properties_pl_ingerir_fechamento_parameters_p_tabela_controle": {
			"type": "string",
			"defaultValue": "ControleVersao"
		},
		"tr_landing_properties_pl_ingerir_fechamento_parameters_p_raw": {
			"type": "string",
			"defaultValue": "raw"
		},
		"tr_landing_properties_pl_ingerir_fechamento_parameters_p_trusted": {
			"type": "string",
			"defaultValue": "trusted"
		},
		"tr_landing_properties_pl_ingerir_fechamento_parameters_p_landing": {
			"type": "string",
			"defaultValue": "landing"
		},
		"tr_landing_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/e63e4e78-7bcc-4a13-b746-41dc90a24486/resourceGroups/rg-work-bigdata/providers/Microsoft.Storage/storageAccounts/sagestaoloja"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipe_Ingest_Generic')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"dataset": {
								"referenceName": "ds_Excel",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "landing",
										"type": "Expression"
									},
									"filename": "Histórico de Caixas"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"tbName": {
						"type": "array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-09-03T21:36:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_Excel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipe_Ingest_Generico_excel_01')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetTodosArquivosExcel",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_Excel",
								"type": "DatasetReference",
								"parameters": {
									"folder": "@pipeline().parameters.folder",
									"filename": "@{pipeline().parameters.tbName[0]}"
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CondicaoSeExisteArquivoExcel",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTodosArquivosExcel",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('GetTodosArquivosExcel').output.exists\n",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Erro",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EncerraPipe",
										"value": {
											"value": "@{pipeline().parameters.tbName} 'Não Existe'",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "DeleteIngestExcelLanding",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyIngestExcelLanding",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_Excel",
											"type": "DatasetReference",
											"parameters": {
												"folder": "landing",
												"filename": {
													"value": "@{pipeline().parameters.tbName[0]}",
													"type": "Expression"
												}
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "ls_adls_gestao_bigdata",
												"type": "LinkedServiceReference"
											}
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "CopyIngestExcelLanding",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_Excel",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.folder",
													"type": "Expression"
												},
												"filename": {
													"value": "@{pipeline().parameters.tbName[0]}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet_generico",
											"type": "DatasetReference",
											"parameters": {
												"p_container": "raw",
												"p_path": {
													"value": "@{pipeline().parameters.tbName[1]}/dtingestion=@{utcnow('yyyyMMdd')}",
													"type": "Expression"
												},
												"p_fileName": {
													"value": "@{pipeline().parameters.tbName[1]}-@{pipeline().parameters.dtIngestion}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Sucesso",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "DeleteIngestExcelLanding",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "EncerraPipe",
										"value": "\"Encerrou com sucesso\""
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"tbName": {
						"type": "array"
					},
					"folder": {
						"type": "string"
					},
					"dtIngestion": {
						"type": "string"
					}
				},
				"variables": {
					"EncerraPipe": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-09-03T21:36:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_Excel')]",
				"[concat(variables('factoryId'), '/datasets/ds_parquet_generico')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gestao_bigdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipe_Ingest_landing_00')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachParaCadaListaArquivo",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [
							{
								"name": "tables",
								"value": "\"CLientes\""
							}
						],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.p_file_name",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 3,
							"activities": [
								{
									"name": "exec_pipe_loop",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pipe_Ingest_Generico_excel_01",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"tbName": {
												"value": "@item()",
												"type": "Expression"
											},
											"folder": {
												"value": "@pipeline().parameters.p_folder",
												"type": "Expression"
											},
											"dtIngestion": {
												"value": "@pipeline().parameters.p_dataIngestion",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"p_file_name": {
						"type": "array",
						"defaultValue": [
							[
								"Historico_Pedidos",
								"historicoPedido"
							],
							[
								"Contas a Pagar",
								"contasapagar"
							],
							[
								"Clientes",
								"clientes"
							],
							[
								"Fornecedores",
								"fornecedores"
							],
							[
								"Recebimentos",
								"recebimentos"
							],
							[
								"Produtos",
								"produtos"
							],
							[
								"Lista Pedidos",
								"pedidos"
							],
							[
								"lista-de-pedidos",
								"pedidosIfood"
							]
						]
					},
					"p_folder": {
						"type": "string",
						"defaultValue": "landing"
					},
					"p_dataIngestion": {
						"type": "string",
						"defaultValue": "20100801"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-09-03T22:17:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipe_Ingest_Generico_excel_01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingerir_fechamento')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GmExcel",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_Excel_Lista",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.p_landing",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"itemName",
								"lastModified",
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "forListaArquivos",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GmExcel",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GmExcel').output.childItems",
								"type": "Expression"
							},
							"batchCount": 3,
							"activities": [
								{
									"name": "loControleVersao",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select max(dtIngestao) as dtUltimaMod from dbControle..ControleVersao where nomeArquivo = '@{item().name}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_sql_controle",
											"type": "DatasetReference",
											"parameters": {
												"p_banco_dados": "dbControle",
												"p_tabela": "ControleVersao"
											}
										}
									}
								},
								{
									"name": "if_tabela_vazia",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "loControleVersao",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@empty(activity('loControleVersao').output.firstRow.dtUltimaMod)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "EncontrouDataMod",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "v_ultima_data_modificada",
													"value": {
														"value": "@activity('loControleVersao').output.firstRow.dtUltimaMod",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "NaoEncotrouDataMod",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "v_ultima_data_modificada",
													"value": {
														"value": "2021-10-08T00:00:00.000Z",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "ingerirArquivoParquetRaw",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "if_tabela_vazia",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_Excel",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.p_landing",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet_generico",
											"type": "DatasetReference",
											"parameters": {
												"p_container": {
													"value": "@pipeline().parameters.p_raw",
													"type": "Expression"
												},
												"p_path": {
													"value": "@{replace(item().name,' ','')}/dtIngestao=@{formatDateTime(utcnow(),'yyyyMMdd')}",
													"type": "Expression"
												},
												"p_fileName": {
													"value": "@replace(replace(item().name,'.',''),' ','')\n",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Stored procedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ingerirArquivoParquetRaw",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Proc_Controle_Versao]",
										"storedProcedureParameters": {
											"nomeArquivo": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											},
											"dtUltimaMod": {
												"value": {
													"value": "@formatDateTime(variables('v_ultima_data_modificada'),'yyyy-MM-ddTHH:mm:ss')",
													"type": "Expression"
												},
												"type": "Datetime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_sql_db_azure",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "DeleteIngestExcelLanding",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Stored procedure",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_Excel",
											"type": "DatasetReference",
											"parameters": {
												"folder": "landing",
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "ls_adls_gestao_bigdata",
												"type": "LinkedServiceReference"
											},
											"path": "log"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"p_banco_controle": {
						"type": "string",
						"defaultValue": "dbControle"
					},
					"p_tabela_controle": {
						"type": "string",
						"defaultValue": "ControleVersao"
					},
					"p_raw": {
						"type": "string",
						"defaultValue": "raw"
					},
					"p_trusted": {
						"type": "string",
						"defaultValue": "trusted"
					},
					"p_landing": {
						"type": "string",
						"defaultValue": "landing"
					}
				},
				"variables": {
					"v_ultima_data_modificada": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_Excel_Lista')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_controle')]",
				"[concat(variables('factoryId'), '/datasets/ds_Excel')]",
				"[concat(variables('factoryId'), '/datasets/ds_parquet_generico')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_db_azure')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gestao_bigdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsSnowFlake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [],
				"typeProperties": {
					"schema": "INFORMATION_SCHEMA",
					"table": "FUNCTIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsSnowFlake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gestao_bigdata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().folder",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gestao_bigdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gestao_bigdata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@{dataset().filename}",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().folder",
							"type": "Expression"
						}
					},
					"sheetIndex": 0,
					"range": "",
					"firstRowAsHeader": false
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gestao_bigdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Excel_Lista')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gestao_bigdata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().folder",
							"type": "Expression"
						}
					},
					"sheetIndex": 0,
					"range": "",
					"firstRowAsHeader": false
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gestao_bigdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_mysql_local')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_mysql",
					"type": "LinkedServiceReference",
					"parameters": {
						"dbName": {
							"value": "@dataset().dbName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"tbName": {
						"type": "string"
					},
					"dbName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().tbName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_mysql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_parquet_generico')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gestao_bigdata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_container": {
						"type": "string"
					},
					"p_path": {
						"type": "string"
					},
					"p_fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@{dataset().p_fileName}.parquet",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_path",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gestao_bigdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_parquet_generico_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gestao_bigdata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_container": {
						"type": "string"
					},
					"p_path": {
						"type": "string"
					},
					"p_fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "FornecedorescomContasaPagarxlsx.parquet",
						"folderPath": "FornecedorescomContasaPagar.xlsx/dtIngestao=19000101",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gestao_bigdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_controle')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_db_azure",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_banco_dados": {
						"type": "string"
					},
					"p_tabela": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "nomeArquivo",
						"type": "varchar"
					},
					{
						"name": "dtUltimaMod",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "dtIngestao",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ControleVersao"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_db_azure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lsSnowFlake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Snowflake",
				"typeProperties": {
					"connectionString": "[parameters('lsSnowFlake_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_gestao_bigdata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_gestao_bigdata_properties_typeProperties_url')]",
					"tenant": "[parameters('ls_adls_gestao_bigdata_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('ls_adls_gestao_bigdata_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_gestao_bigdata_servicePrincipalCredential')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_akv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_akv_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azuresql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_azuresql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_msql_local')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"connectionString": "[parameters('ls_msql_local_connectionString')]"
				},
				"connectVia": {
					"referenceName": "ir-selfhosted-local",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ir-selfhosted-local')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_mysql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"dbName": {
						"type": "string",
						"defaultValue": "dbDitalia"
					}
				},
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"connectionString": "[parameters('ls_mysql_connectionString')]"
				},
				"connectVia": {
					"referenceName": "ir-selfhosted-local",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ir-selfhosted-local')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_db_azure')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sql_db_azure_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_akv",
							"type": "LinkedServiceReference"
						},
						"secretName": "pwd-sql-db"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_akv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_landing')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_ingerir_fechamento",
							"type": "PipelineReference"
						},
						"parameters": {
							"p_banco_controle": "[parameters('tr_landing_properties_pl_ingerir_fechamento_parameters_p_banco_controle')]",
							"p_tabela_controle": "[parameters('tr_landing_properties_pl_ingerir_fechamento_parameters_p_tabela_controle')]",
							"p_raw": "[parameters('tr_landing_properties_pl_ingerir_fechamento_parameters_p_raw')]",
							"p_trusted": "[parameters('tr_landing_properties_pl_ingerir_fechamento_parameters_p_trusted')]",
							"p_landing": "[parameters('tr_landing_properties_pl_ingerir_fechamento_parameters_p_landing')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/landing/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_landing_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ingerir_fechamento')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ir-selfhosted-local')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}